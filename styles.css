@import url("https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@600;700&display=swap");

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
}

img {
  max-width: 100%;
}

html {
  height: 100%;
}

body {
  font-family: "Barlow Semi Condensed", sans-serif;
  height: 100%;
  display: grid;
  place-items: center;
  background-image: radial-gradient(
    circle at 50% 0%,
    hsl(214, 47%, 23%),
    hsl(237, 49%, 15%)
  );
  background-repeat: no-repeat;
  background-size: cover;
}

.game-wrapper {
  --max-width: 1110px;
  --padding: 1rem;
  margin-inline: auto;
  width: min(var(--max-width), 100% - var(--padding) * 2);
  height: 100%;
  padding-block: calc(var(--padding) * 3);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}

.rules-modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: hsl(0, 0%, 100%);
  border-radius: 0.5rem;
  padding: 1.5rem;
  z-index: 100;
  transition: 0.3s;
  translate: 0 100px;
  opacity: 0;
  display: none;
  flex-direction: column;
}

.rules-modal.is-active {
  opacity: 1;
  translate: 0;
}

.rules-modal header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  width: 100%;
}

.rules-modal header h2 {
  font-size: 2rem;
  font-weight: 700;
  color: hsl(229, 25%, 31%);
}

.rules-modal button {
  background-color: transparent;
  border: none;
  cursor: pointer;
}

@media (min-width: 769px) {
  .rules-modal button.phone-only {
    display: none;
  }
}

@media screen and (max-width: 768px) {
  .rules-modal {
    width: 100%;
    height: 100vh;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    padding: 5rem 1.5rem;
  }
  .rules-modal header {
    justify-content: center;
  }
  .rules-modal header button {
    display: none;
  }
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 50;
  background: rgba(0, 0, 0, 0.5);
  opacity: 0;
  transition: 0.3s;
  display: none;
}

.backdrop.is-active {
  opacity: 1;
}

.title {
  display: flex;
  align-items: stretch;
  justify-content: space-between;
  border: 2px solid hsl(217, 16%, 45%);
  border-radius: 0.5rem;
  padding: 16px 24px;
  width: min(90%, 700px);
  text-transform: uppercase;
}

.game {
  width: min(95%, 800px);
  display: flex;
  justify-content: center;
}

.title .game-title {
  font-size: 2.3rem;
  font-weight: 700;
  color: hsl(0, 0%, 100%);
}

.title .game-title h2 {
  line-height: 2rem;
}

.title .score {
  background-color: hsl(0, 0%, 100%);
  border-radius: 0.5rem;
  padding: 8px 16px;
  color: hsl(229, 64%, 46%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 19%;
}

.title .score .value {
  font-size: 3rem;
  font-weight: 700;
  text-align: center;
  color: hsl(229, 25%, 31%);
}

@media screen and (max-width: 768px) {
  .title {
    align-items: center;
  }
  .title .game-title h2 {
    font-size: 1.5rem;
    line-height: 1.4rem;
  }

  .title .score {
    width: 25%;
  }
  .title .score .value {
    font-size: 2rem;
  }
}

.game .options,
.game .picks {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  position: relative;
  width: 398px;
  height: 310px;
}

.game .options .option,
.game .picked {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 110px;
  aspect-ratio: 1;
  padding: 1rem;
  background-color: white;
  border-radius: 50%;
  cursor: pointer;
  position: relative;
  --border-size: -1rem;
  transform-style: preserve-3d;
  transition: 0.3s;
}

.game .options .option::after,
.game .picked::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  transform: translate(var(--border-size), var(--border-size)) translateZ(-2px);
  width: calc(100% + var(--border-size) * -2);
  height: calc(100% + var(--border-size) * -2);
  border-radius: 50%;
  border: 0px solid var(--border-color);
  border-bottom-width: calc(var(--border-size) / -1.5);
  background-color: var(--bg-color);
  z-index: -2;
  transition: 0.3s;
  display: block;
}

.game .options .option::before,
.game .picked::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 0px solid hsl(238, 19%, 90%);
  border-top-width: calc(var(--border-size) / -2);
  z-index: 0;
  transition: 0.3s;
  display: block;
}

.game [data-value="r"] {
  --bg-color: hsl(349, 70%, 56%);
  --border-color: hsl(349, 71%, 52%);
}

.game [data-value="p"] {
  --bg-color: hsl(230, 89%, 65%);
  --border-color: hsl(230, 89%, 62%);
}

.game [data-value="s"] {
  --bg-color: hsl(40, 84%, 53%);
  --border-color: hsl(39, 89%, 49%);
}

.game .options .top {
  display: flex;
  justify-content: space-between;
  width: 100%;
  transform: translateY(-50%);
}

.game .options .bg {
  position: absolute;
  z-index: -3;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  display: flex;
  justify-content: center;
}

.rules {
  margin-left: auto;
}

.rules .btn {
  background-color: transparent;
  cursor: pointer;
  color: hsl(0, 0%, 100%);
  font-weight: 600;
  text-transform: uppercase;
  padding: 0.5rem 3rem;
  border-radius: 0.5rem;
  border: 2px solid hsl(217, 16%, 45%);
}

.rules .btn:is(:hover, :focus) {
  outline: none;
}

@media screen and (max-width: 768px) {
  .game .options,
  .game .picks {
    width: 290px;
    height: 260px;
  }
  .game .options .option,
  .game .picked {
    width: min(80px, 20vw);
    height: min(80px, 20vw);
    --border-size: -0.8rem;
  }
  .game .options .option img,
  .game .picked img {
    width: 80%;
  }
  .rules {
    margin-inline: auto;
  }
}

.game .picks {
  display: none;
  flex-flow: row wrap;
  width: 100%;
  transform: translateY(-15%);
  opacity: 0;
  scale: 0;
  transition: 0.3s;
}

.game.playing .picks {
  opacity: 1;
  scale: 1;
  margin-top: 30px;
}

.game .picks .choice {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 120px;
}

.game .picks .choice h2 {
  font-size: 1.6rem;
  font-weight: 700;
  color: hsl(0, 0%, 100%);
  text-transform: uppercase;
}

.game .picks .choice .picked {
  scale: 2;
}

.game .result {
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 1rem;
}

.game .result h2 {
  text-transform: uppercase;
  color: hsl(0, 0%, 100%);
  font-size: 3rem;
}

.game .result .btn {
  background-color: hsl(0, 0%, 100%);
  cursor: pointer;
  color: hsl(214, 47%, 23%);
  font-weight: 600;
  text-transform: uppercase;
  padding: 0.5rem 3rem;
  border-radius: 0.5rem;
  border: none;
  transition: 0.3s;
}

.game .result .btn:is(:hover, :focus) {
  outline: none;
  color: hsl(349, 71%, 52%);
}

@media screen and (max-width: 768px) {
  .game .picks {
    justify-content: center;
  }
  .game .picks .choice {
    width: 128px;
    gap: 30px;
  }
  .game .picks .choice h2 {
    font-size: 1rem;
  }
  .game .picks .choice .picked {
    scale: 1;
  }

  .game .result {
    margin-top: 30px;
    order: 3;
  }
}

.game .options.hide .option {
  scale: 0;
  opacity: 0;
}

.game .options.hide .bg {
  opacity: 0;
}
